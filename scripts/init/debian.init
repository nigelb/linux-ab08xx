#!/bin/bash 

### BEGIN INIT INFO
# Provides:          powergizmo
# Required-Start:    $local_fs
# Required-Stop:     hwclock
# Default-Start:     S
# Default-Stop:      0 6
# Short-Description: utilizes the PowerGizmo power management boad for low power sleep
# Description:       utilizes the PowerGizmo power management boad for low power sleep
### END INIT INFO
. /lib/lsb/init-functions

RTC_DEVICE=/dev/rtc0
SYS_PATH=/sys`udevadm info -q path -n $RTC_DEVICE`
POWERDOWN_TIMEOUT=15
MIN_SLEEP_PERIOD=60
SLEEP_PERIOD=900

function check_config
{
	log_action_begin_msg "Power Gizmo: "
	
	if [ -z "$RTC_DEVICE" ]
	then
		log_failure_msg "RTC_DEVICE not set."		
		exit 1
	fi

	if [ ! -e "$RTC_DEVICE" ]
	then
		log_failure_msg "Device $RTC_DEVICE does not exist."		
		exit 1
	fi
}

function register_setup
{
	echo 0 > $SYS_PATH/status/TIM
	echo 1 > $SYS_PATH/timer/TM
	echo 0 > $SYS_PATH/timer/TRPT
	echo 2 > $SYS_PATH/timer/TFS

	#Select nIRQ2 for output
        echo 1 > $SYS_PATH/int/TIE
        echo 5 > $SYS_PATH/control2/OUT2S

	echo 1 > $SYS_PATH/timer/RPT
	echo 1 > $SYS_PATH/int/AIE
	echo 0 > $SYS_PATH/int/IM
	echo 3 > $SYS_PATH/control2/OUT1S

	echo 0 > $SYS_PATH/status/TIM
	sleep 0.5
	echo 0 > $SYS_PATH/status/ALM

}

function request_powerdown
{
	echo "Powering down......"
	#Disable Countdown
	echo 0 > $SYS_PATH/timer/TE

	#Set timer registers
	register_setup
	echo $1 > $SYS_PATH/timer/countdown
	

	#Enable Countdown
	echo 1 > $SYS_PATH/timer/TE
}

function calc_wakeup
{
#| bc -q 
	SE=`date +%s`
	INTERVAL=$1
	wakeup_at=$(cat <<- EOF | bc -q
	a=$SE
	b=a % $INTERVAL
	c=a-b
	
	wu=c + $INTERVAL
	if((wu - a) < $MIN_SLEEP_PERIOD)
	{
		wu=a+$MIN_SLEEP_PERIOD		
	}
	print wu
	EOF
	)
	echo $wakeup_at
}

function wakeup_at_interval_boundary
{
	register_setup
	wakeup_at=`calc_wakeup $1`
	/usr/sbin/rtcwake --mode no --time $wakeup_at -d $RTC_DEVICE -v
}

check_config
case "$1" in

	start)
		touch /etc/powergizmo
		echo "Starting Powergizmo"
		register_setup

		#Disable the timer so that it does not power down
		echo 0 > $SYS_PATH/timer/TE

		;;
	stop)
		
		touch /etc/powergizmo.stop
		log_action_msg "Shutting down PowerGizmo"
		log_success_msg "PowerGizmo Stop"
		wakeup_at_interval_boundary $SLEEP_PERIOD
		request_powerdown $POWERDOWN_TIMEOUT
		cat /proc/driver/rtc
		;;
	status)
		log_action_msg "PowerGizmo Status"	
		exit 0
		;;
	next)
		echo -n "Current time: "
		date
		echo -n "Next wakeup:  "
		wakeup_at=`calc_wakeup $SLEEP_PERIOD`
		date --date @$wakeup_at
		echo $wakeup_at
		;;
#	restart|try-restart|condrestart|reload)
#		stop
#	        start
#   		;;
	*)
		log_action_msg "PowerGizmo does not support action: $1"
		;;
esac
